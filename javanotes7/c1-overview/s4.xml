<?xml version="1.0" encoding="UTF-8"?>


<section id="overview.4" title="Blok Bangunan Dasar dari Program" shorttitle="Blok Bangunan dari Program">

<p><start><big>A</big>da dua aspek utama</start> dari pemrograman yakni: data
dan instruksi. Untuk bekerja dengan data, kamu perlu mengerti <newword>variabel</newword> 
dan <newword>tipe</newword>; untuk bekerja dengan
instruksi, kamu perlu mengerti <newword>struktur kontrol</newword> 
dan <newword>subrutin</newword>. Kamu akan menghabiskan
sebagian besar waktu kuliah untuk mengenali konsep-konsep tersebut.</p>

<p>Sebuah <newword>variabel</newword> hanya merupakan sebuah lokasi memori (atau
beberapa lokasi yang berurutan yang diperlakukan sebagai satu unit) yang telah diberikan nama
sehingga dapat dengan mudah diacu dan digunakan dalam sebuah program. Programmer hanya perlu
memikirkan nama variabel; merupakan tanggung jawab kompiler untuk mengingat alamat memorinya.
Sebagai seorang programmer, kamu perlu mengingat di luar kepala bahwa nama variabel mengacu
ke semacam "kotak" yang dapat menyimpan data di memori, meskipun kamu tidak perlu tahu di mana
letak kotak tersebut ditempatkan di memori.</p>

<p>di Java dan banyak bahasa pemrograman lainnya, sebuah variable memiliki <newword>tipe</newword>
yang menandakan jenis data apa yang dapat disimpannya. Salah satu tipe
dari variabel dapat menyimpan integer&mdash;keseluruhan angka seperti 3, -7, dan 0&mdash;sementara
tipe lain dapat menyimpan angka floating point&mdash;angka dengan titik desimal seperti
3.14, -2.7, or 17.0. (Ya, komputer membuat perbedaan antara angka 17 integer dan angka 17.0
dari floating point; keduanya sebenarnya sangat berbeda di dalam komputer.) Ada juga tipe untuk
karakter individu ('A', ';', dan sebagainya.), string ("Hello", "Sebuah string dapat mencakup banyak
karakter", dan sebagainya.), dan tipe yang kurang umum seperti tanggal, warna, suara, dan banyak lagi
jenis data yang perlu disimpan oleh program.</p>

<p>Bahasa pemrograman selalu mempunyai perintah untuk menyimpan atau mengambil data dari variable dan
untuk melakukan perhitungan data. Sebagai contoh, "pernyataan penugasan" berikut, yang mungkin
muncul dalam program Java, memerintahkan komputer untuk mengambil angka yang disimpan dalam variabel
yang bernama "modal", mengalikan angka tersebut dengan 0.07, dan menyimpan hasilnya di variable yang
bernama "bunga":</p>

<pre>bunga = modal * 0.07;</pre>

<np>Ada juga "perintah masukan" untuk mendapatkan data dari pengguna atau dari berkas
di disk komputer, dan ada "perintah keluaran" untuk mengirimkan data ke sebaliknya.</np>

<p>Perintah dasar tersebut&mdash;untuk memindahkan data dari satu lokasi ke lokasi lain dan
untuk melakukan perhitungan&mdash;merupakan blok bangunan dari semua program. Blok bangunan
ini dikombinasikan menjadi sebuah program yang kompleks menggunakan struktur kontrol dan
subrutin.</p>

<break/>

<pp>Program merupakan urutan dari instruksi. Dalam "aliran kontrol" yang umum,
komputer akan mengeksekusi intruksi satu demi satu menurut urutan instruksi yang 
berada di program. Tetapi, keadaan ini sangatlah membatasi: komputer akan segera
kehabisan intruksi untuk dikerjakan. <newword>Struktur Kontrol</newword> merupakan
instruksi khusus yang dapat mengubah aliran kontrol.
ada dua tipe dasar dari struktur kontrol: <newword>loop</newword>,
yang memungkinkan urutan instruksi untuk diulang berkali-kali, dan <newword>percabangan</newword>,
yang memungkinkan komputer memilih aliran tindakan dari dua atau lebih aliran dengan menguji
kondisi yang terjadi saat program sedang berjalan.</p>

<p>Sebagai contoh, jika nilai dari varibel "modal" lebih besar dari 10000, maka "bunga" harus 
dihitung dengan mengalikan 0.05 ke modal; jika tidak, maka bunga harus dihitung dengan mengalikan
0.04 ke modal. Program memerlukan cara untuk menampilkan jenis keputusan seperti itu.
Di Java, hal tersebut dapat diungkapkan dengan menggunakan "pernyataan if":</p>

<pre>if (modal &gt; 10000)
    bunga = modal * 0.05;
else
    bunga = modal * 0.04;</pre>
  
<np>(Jangan kuatir mengenai rinciannya saat ini. Hanya ingat saja bahwa komputer dapat
menguji kondisi dan menentukan apa yang dilakukan selanjutnya berdasarkan pengujian tersebut.)</np>


</section>